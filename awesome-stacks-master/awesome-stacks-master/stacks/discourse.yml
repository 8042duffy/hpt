# DOMAIN=example.com docker stack deploy -c discourse.yml discourse

version: '3.8'

x-defaults: &defaults
  environment:
    - DISCOURSE_DATABASE_HOST=postgres
    - DISCOURSE_DATABASE_NAME=discourse
    - DISCOURSE_DATABASE_USER=discourse
    - DISCOURSE_DATABASE_PASSWORD=myp@ssw0rd
    - DISCOURSE_USERNAME=${ADMIN_USERNAME:-admin}
    - DISCOURSE_PASSWORD=${ADMIN_PASSWORD:-myp@ssw0rd}
    - DISCOURSE_EMAIL=${ADMIN_EMAIL:-admin@example.com}
    - DISCOURSE_HOST=${DOMAIN:-discourse.localhost}
    - DISCOURSE_PORT=3000
    - SMTP_HOST=${SMTP_HOST}
    - SMTP_PORT=${SMTP_PORT}
    - SMTP_USER=${SMTP_USER}
    - SMTP_PASSWORD=${SMTP_PASSWORD}
    - SMTP_TLS=${SMTP_TLS:-yes}
    - SMTP_AUTH=${SMTP_AUTH:-login}
    - ALLOW_EMPTY_PASSWORD=yes

services:
  discourse:
    <<: *defaults
    image: bitnami/discourse:${VERSION:-2.7.7}
    volumes:
      - ${VOLUME_PATH}data:/bitnami
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.discourse-${NUMBER:-1}.rule=Host(`${DOMAIN:-discourse.localhost}`)
        - traefik.http.routers.discourse-${NUMBER:-1}.entrypoints=${SCHEME:-https}
        - traefik.http.routers.discourse-${NUMBER:-1}.service=discourse-${NUMBER:-1}
        - traefik.http.routers.discourse-${NUMBER:-1}.tls.certresolver=letsencrypt
        - traefik.http.services.discourse-${NUMBER:-1}.loadbalancer.server.port=3000
    networks:
      - traefik
      - internal

  sidekiq:
    <<: *defaults
    image: bitnami/discourse:${VERSION:-2.7.7}
    command: /opt/bitnami/scripts/discourse-sidekiq/run.sh
    volumes:
      - ${VOLUME_PATH}sidekiq:/bitnami
    networks:
      - internal

  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=discourse
      - POSTGRES_USER=discourse
      - POSTGRES_PASSWORD=myp@ssw0rd
    volumes:
      - ${VOLUME_PATH}postgres:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:6-alpine
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - internal

volumes:
  postgres:
  data:
  sidekiq:

networks:
  internal:
    driver: overlay
    attachable: true
  traefik:
    external: true
    name: traefik-net
